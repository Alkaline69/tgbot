plugins {
    id 'java'
    id 'org.springframework.boot' version '2.2.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'application'
    id "com.github.johnrengelman.shadow" version "5.0.0"
    id 'nu.studer.jooq' version '4.1'
//    id "io.freefair.lombok" version "5.0.0-rc2"
}

group 'konst'
version '1.0-SNAPSHOT'
mainClassName = 'com.accenture.tgbots.sample.ExampleBot'

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'
    testCompileOnly 'org.projectlombok:lombok:1.18.12'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'

    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile 'com.annimon:tgbots-module:0.8'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    jooqRuntime 'org.jooq:jooq-meta-extensions'

    implementation 'org.springframework.boot:spring-boot-starter-jooq'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    runtimeOnly('com.h2database:h2')

    implementation 'org.apache.commons:commons-lang3:3.6'
}

shadowJar {
    mergeServiceFiles()
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
}

jooq {
    sample(sourceSets.main) {
        generator {
            database {
                name = 'org.jooq.meta.extensions.ddl.DDLDatabase'
                properties {
                    property {
                        key = 'scripts'
                        value = 'src/main/resources/schema.sql'
                    }
                    property {
                        key = 'sort'
                        value = 'semantic'
                    }
                    property {
                        key = 'unqualifiedSchema'
                        value = 'none'
                    }
                    property {
                        key = 'defaultNameCase'
                        value = 'as_is'
                    }
                }
            }
        }
    }
}